==============================
LIVING ANTIOQUIA BUSINESS SCHEMA
==============================

---------------------
Database Schema
---------------------
1.-- Create Suppliers table: Stores information about suppliers.
CREATE TABLE suppliers (
    id SERIAL PRIMARY KEY,
    supplier_name VARCHAR(100) NOT NULL,
    contact_name VARCHAR(255),
    contact_email VARCHAR(255),
    contact_phone VARCHAR(20),
    address VARCHAR(255),
    city_id INT REFERENCES cities(id),
    notes TEXT
);

2.-- Create Customers table; Stores information about customers 
(both B2B and final customers).
CREATE TABLE customers (
    id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    type VARCHAR(50) NOT NULL, -- B2B or Final Customer
    contact_name VARCHAR(100),
    contact_email VARCHAR(100),
    contact_phone VARCHAR(20),
    address VARCHAR(255),
    city_id INT REFERENCES cities(id),
    notes TEXT
);

3.-- Create Cities table: Stores information about cities.
CREATE TABLE cities (
    id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL
);

4.-- Create RawMaterials table: Stores information about raw materials
used in production.
CREATE TABLE raw_materials (
    id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    supplier_id INT NOT NULL REFERENCES suppliers(id),
    reorder_level NUMERIC NOT NULL,
    unit_of_measure VARCHAR(50) NOT NULL,
    lead_time_days INT,
    date_added DATE NOT NULL
);

5.-- Create FinishedProducts table: Stores information about finished products.
CREATE TABLE finished_products (
    id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    volume VARCHAR(50) NOT NULL,
    price NUMERIC NOT NULL,
    category VARCHAR(100) NOT NULL,
    date_added DATE NOT NULL
);

6.-- Create ProductionBatches table: Tracks production batches of 
finished products.
CREATE TABLE production_batches (
    id SERIAL PRIMARY KEY,
    product_id INT REFERENCES finished_products(id),
    batch_date DATE NOT NULL,
    quantity_produced NUMERIC NOT NULL
);

7.-- Create Orders table: Stores information about customer orders.
CREATE TABLE orders (
    id SERIAL PRIMARY KEY,
    customer_id INT REFERENCES customers(id),
    order_date DATE NOT NULL,
    status VARCHAR(50) NOT NULL
);

8.-- Create OrderDetails table
CREATE TABLE order_details (
    order_id INT REFERENCES orders(id),
    product_id INT REFERENCES finished_products(id),
    quantity NUMERIC NOT NULL,
    price NUMERIC NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

9.-- Create Inventory table: To track both raw materials and finished 
products, use a polymorphic association:
CREATE TABLE inventory (
    id SERIAL PRIMARY KEY,
    item_type VARCHAR(50) NOT NULL, -- 'finished_product' or 'raw_material'
    item_id INT NOT NULL,
    quantity NUMERIC NOT NULL,
    CHECK (item_type IN ('finished_product', 'raw_material'))
);

-- Create Expenses table
CREATE TABLE expenses (
    id SERIAL PRIMARY KEY,
    description TEXT NOT NULL,
    amount NUMERIC NOT NULL,
    date DATE NOT NULL,
    category VARCHAR(100)
);
