==============================
LIVING ANTIOQUIA BUSINESS SCHEMA
==============================

---------------------
Database Schema
---------------------
-- Suppliers 
CREATE TABLE suppliers (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_name VARCHAR(255),
    contact_email VARCHAR(255),
    contact_phone VARCHAR(20),
    address VARCHAR(255),
    city_id INT REFERENCES cities(id),
    notes TEXT
);

-- Purchase Orders
CREATE TABLE purchase_orders (
    id SERIAL PRIMARY KEY,
    supplier_id INT REFERENCES suppliers(id),
    order_date DATE NOT NULL,
    total_amount NUMERIC NOT NULL, -- total cost of all items in the order
    status VARCHAR(50) NOT NULL CHECK (status IN ('Pending', 'Approved', 'Rejected', 'Shipped', 'Received', 'Completed', 'Cancelled'))
);

-- Purchase Order Details
CREATE TABLE purchase_order_details (
    purchase_order_id INT REFERENCES purchase_orders(id),
    raw_material_id INT REFERENCES raw_materials(id),
    quantity NUMERIC NOT NULL CHECK (quantity >= 0),
    price NUMERIC NOT NULL CHECK (price >= 0),
    PRIMARY KEY (purchase_order_id, raw_material_id)
);

-- Raw Materials
CREATE TABLE raw_materials (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    supplier_id INT REFERENCES suppliers(id),
    unit_of_measure VARCHAR(50) NOT NULL,
    reorder_level NUMERIC NOT NULL CHECK (reorder_level >= 0),
    lead_time_days INT,
    date_added DATE NOT NULL
);

-- Cities
CREATE TABLE cities (
    id SERIAL PRIMARY KEY,
    city VARCHAR(100) NOT NULL
);

-- Customers
CREATE TABLE customers (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    type VARCHAR(50) NOT NULL,  -- 'B2B' or 'Final Customer'
    customer_since DATE NOT NULL,
    contact_name VARCHAR(255),
    contact_email VARCHAR(255),
    contact_phone VARCHAR(20),
    address VARCHAR(255),
    city_id INT REFERENCES cities(id),
    notes TEXT
);

-- Orders
CREATE TABLE orders (
    id SERIAL PRIMARY KEY,
    customer_id INT REFERENCES customers(id),
    city_id INT REFERENCES cities(id),
    order_date DATE NOT NULL,
    status VARCHAR(50) NOT NULL CHECK (status IN ('Pending', 'Processing', 'Shipped', 'Delivered', 'Cancelled', 'Returned', 'Completed'))
);

-- Order Details
CREATE TABLE order_details (
    order_id INT REFERENCES orders(id),
    finished_product_id INT REFERENCES finished_products(id),
    quantity NUMERIC NOT NULL CHECK (quantity >= 0),
    price NUMERIC NOT NULL CHECK (price >= 0),
    PRIMARY KEY (order_id, finished_product_id)
);

-- Payments
CREATE TABLE payments (
    id SERIAL PRIMARY KEY,
    order_id INT REFERENCES orders(id),
    payment_date DATE NOT NULL,
    amount NUMERIC NOT NULL CHECK (amount >= 0),
    payment_method VARCHAR(50)
);

-- Finished Products
CREATE TABLE finished_products (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    category_id INT REFERENCES product_categories(id),
    supplier_id INT REFERENCES suppliers(id),
    volume VARCHAR(50) NOT NULL,
    price NUMERIC NOT NULL CHECK (price >= 0),
    date_added DATE NOT NULL
);

-- Product Categories 
CREATE TABLE product_categories (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);