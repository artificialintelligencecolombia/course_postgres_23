==============================
LIVING ANTIOQUIA BUSINESS SCHEMA
==============================

---------------------
Database Schema
---------------------
-- Suppliers 
CREATE TABLE suppliers (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_name VARCHAR(255),
    contact_email VARCHAR(255) UNIQUE,
    contact_phone VARCHAR(20),
    address VARCHAR(255),
    city_id INT REFERENCES cities(id) ON UPDATE CASCADE ON DELETE SET NULL,
    notes TEXT,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- Purchase Orders
CREATE TABLE purchase_orders (
    id SERIAL PRIMARY KEY,
    supplier_id INT REFERENCES suppliers(id) ON UPDATE CASCADE ON DELETE SET NULL,
    total_amount NUMERIC(10,2) NOT NULL, -- total cost of all items in the order
    status VARCHAR(50) NOT NULL CHECK (status IN ('pending', 'approved', 'rejected', 'shipped', 'received', 'completed', 'cancelled')),
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- Purchase Order Details
CREATE TABLE purchase_order_details (
    purchase_order_id INT REFERENCES purchase_orders(id) ON UPDATE CASCADE ON DELETE CASCADE,
    raw_material_id INT REFERENCES raw_materials(id) ON UPDATE CASCADE ON DELETE SET NULL,
    quantity NUMERIC(10,2) NOT NULL CHECK (quantity >= 0),
    price NUMERIC NOT NULL CHECK (price >= 0),
    PRIMARY KEY (purchase_order_id, raw_material_id),
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- Raw Materials
CREATE TABLE raw_materials (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    supplier_id INT REFERENCES suppliers(id) ON UPDATE CASCADE ON DELETE SET NULL,
    unit_of_measure VARCHAR(50) NOT NULL,
    reorder_level NUMERIC NOT NULL CHECK (reorder_level >= 0), --minimum quantity of a raw material that must be on hand before a new order should be placed to replenish the stock
    lead_time_days INT CHECK (lead_time_days >= 0), -- Number of days it takes for a raw material to be delivered after an order is placed. 
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- Cities
CREATE TABLE cities (
    id SERIAL PRIMARY KEY,
    city VARCHAR(100) NOT NULL UNIQUE,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- Potential Customers
CREATE TABLE potential_customers (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    type VARCHAR(50) NOT NULL CHECK (type IN ('B2B','Final Customer')),
    contact_name VARCHAR(255),
    contact_email VARCHAR(255) UNIQUE,
    contact_phone VARCHAR(20),
    address VARCHAR(255),
    city_id INT REFERENCES cities(id) ON UPDATE CASCADE ON DELETE SET NULL,
    notes TEXT,
    lifecycle_stage VARCHAR(50) NOT NULL DEFAULT 'Uncontacted' CHECK (lifecycle_stage IN ('Uncontacted', 'Llamada', 'Visita+Wpp', 'Wpp2', 'Plan B', 'Venta')), -- Initial stage with CHECK constraint
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- Customers
CREATE TABLE customers (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    type VARCHAR(50) NOT NULL CHECK (type IN ('B2B','Final Customer')),
    contact_name VARCHAR(255),
    contact_email VARCHAR(255) UNIQUE,
    contact_phone VARCHAR(20),
    address VARCHAR(255),
    city_id INT REFERENCES cities(id) ON UPDATE CASCADE ON DELETE SET NULL,
    notes TEXT,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- Orders
CREATE TABLE orders (
    id SERIAL PRIMARY KEY,
    customer_id INT REFERENCES customers(id) ON UPDATE CASCADE ON DELETE SET NULL,
    city_id INT REFERENCES cities(id) ON UPDATE CASCADE ON DELETE SET NULL,
    total_amount NUMERIC(10,2) NOT NULL, -- Total monetary value of the order, including all items 
    status VARCHAR(50) NOT NULL CHECK (status IN ('pending', 'processing', 'shipped', 'delivered', 'cancelled', 'returned', 'completed')),
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- Order Details
CREATE TABLE order_details (
    order_id INT REFERENCES orders(id) ON UPDATE CASCADE ON DELETE CASCADE,
    finished_product_id INT REFERENCES finished_products(id) ON UPDATE CASCADE ON DELETE SET NULL,
    quantity NUMERIC NOT NULL CHECK (quantity >= 0),
    price NUMERIC(10,2) NOT NULL CHECK (price >= 0),
    PRIMARY KEY (order_id, finished_product_id),
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- Payments
CREATE TABLE payments (
    id SERIAL PRIMARY KEY,
    order_id INT REFERENCES orders(id) ON UPDATE CASCADE ON DELETE CASCADE,
    payment_date DATE,
    amount NUMERIC(10,2) NOT NULL CHECK (amount >= 0),
    payment_method VARCHAR(50) NOT NULL CHECK (payment_method IN ('cash', 'bank transfer')),
    payment_status VARCHAR(50) NOT NULL CHECK (payment_status IN ('pending', 'completed', 'failed')),
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- Finished Products
CREATE TABLE finished_products (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    category_id INT REFERENCES product_categories(id) ON UPDATE CASCADE ON DELETE SET NULL,
    supplier_id INT REFERENCES suppliers(id) ON UPDATE CASCADE ON DELETE SET NULL,
    volume VARCHAR(50) NOT NULL,
    price NUMERIC(10,2) NOT NULL CHECK (price >= 0),
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- Product Categories 
CREATE TABLE product_categories (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL UNIQUE,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);